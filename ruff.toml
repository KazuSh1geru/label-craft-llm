target-version = "py310"
line-length = 120

[lint]
ignore = [
  "INP001",
  "G003", # logger での concat の利用を許可
  "G004", # logger での f-string の利用を許可
  "D100", # パブリックモジュールに対するドキュメントを不要にする
  "D101", # クラス
  "D103", # ファンクション
  "D104", # パブリックパッケージ
  "D105", # マジックメソッド
  "D107", # __init__
  "D415", # ドキュメントの最後に . を付けなくてもよくする
  "S113", # timeoutの不使用を許可
  "S603", # subprocess の利用を許可
  "E501", # line-too-long, 計算がおかしいので他のlinterでチェックする
  "RUF001", # 全角記号が引っかかってしまうため
  "RUF002", # 全角記号が引っかかってしまうため
  "RUF003", # 全角記号が引っかかってしまうため
  "ANN101", # self には型ヒントつけなくても良い
  "ANN401", # Any を使えるようにする
  "SIM108", # if - else を1行にするのは見やすさの件でやめる
  "ERA001", # コードのコメントアウトは一旦許可
  "TRY002", # Exception を直接 raise している箇所が多すぎるため一旦許可
  "TRY003", # Exception 内で文字列をフォーマットしているのを一旦許可
  "PTH123", # パスの結合に open を使っているのを一旦許可
  "SIM115", # open を使っているのを一旦許可
  "EM", # エラーメッセージ系、あんまり趣味に合わないので除外
  "FBT", # boolean trap、あんまり趣味に合わないので除外
  "RET" # return 系、見やすさに影響が出るので除外
]

select = [
  "ALL"
]

unfixable = [
  "F841" # デバッグなどで一時的に使わなくなる変数が消えると困るので自動fixしない
]

[lint.per-file-ignores]
"test_*" = [
  "INP001",
  "N802",
  "S101",
  "D",
  "PT",
  "ANN",
  "PLR",
  "DTZ"
]

[lint.pydocstyle]
convention = "google"
